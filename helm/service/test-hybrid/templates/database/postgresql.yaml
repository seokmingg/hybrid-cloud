{{- if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: test
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      nodeSelector:
        kubernetes.io/hostname: onprem-master
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
      containers:
        - name: postgres
          image: postgres:15.5
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: test-hybrid-db-secrets
                  key: POSTGRESQL_DATABASE
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: test-hybrid-db-secrets
                  key: POSTGRESQL_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: test-hybrid-db-secrets
                  key: POSTGRESQL_PASSWORD
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        accessModes:
          {{- range .Values.postgresql.persistence.accessModes }}
          - {{ . }}
          {{- end }}
        resources:
          requests:
            storage: {{ .Values.postgresql.persistence.size }}
        storageClassName: {{ .Values.postgresql.persistence.storageClassName }}
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: test
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
{{- end }}