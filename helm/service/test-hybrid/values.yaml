global:
  domain: test.seokmin.com
  istio:
    enabled: true
    gateway: istio-system/test-gateway

frontend:
  enabled: true
  image:
    repository: harbor.seokmin.com/test/frontend
    tag: latest
  replicaCount: 2
  imagePullSecrets:
    - harbor-pull-secret
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  hpa:
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  env:
    NEXT_PUBLIC_API_URL: https://test.seokmin.com/api
    NEXTAUTH_URL: https://test.seokmin.com
  envFrom:
    - secretRef:
        name: test-hybrid-front-secrets
  secretValues:
    nextauthSecret: "your-nextauth-secret"  # 실제 배포 시 변경 필요
    googleClientId: "your-google-client-id"  # 실제 배포 시 변경 필요
    googleClientSecret: "your-google-client-secret"  # 실제 배포 시 변경 필요
    kakaoClientId: "your-kakao-client-id"  # 실제 배포 시 변경 필요
    kakaoClientSecret: "your-kakao-client-secret"  # 실제 배포 시 변경 필요

backend:
  enabled: true
  image:
    repository: harbor.seokmin.com/test/backend
    tag: latest
  replicaCount: 2
  imagePullSecrets:
    - harbor-pull-secret
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi
  hpa:
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  env:
    PORT: 3000
    NODE_ENV: production
    POSTGRES_HOST: postgresql
    POSTGRES_PORT: 5432
    REDIS_HOST: redis
    REDIS_PORT: 6379
  envFrom:
    - secretRef:
        name: test-hybrid-back-secrets
    # AWS ESO로 관리되는 시크릿들은 여기에 추가

postgresql:
  enabled: true
  persistence:
    enabled: true
    storageClassName: nfs-storage
    accessModes:
      - ReadWriteOnce
    size: 5Gi
  auth:
    database: test
    username: test
    password: test123!@#

redis:
  enabled: true
  auth:
    password: redis123!@#

istio:
  enabled: true 