---
# roles/common/tasks/main.yaml

# ------------------------------------------------------------
# 1. 기본 패키지 및 시간 동기화 설정
# ------------------------------------------------------------

- name: APT 캐시 초기화
  apt:
    update_cache: yes

- name: 필수 패키지 설치 (chrony 포함)
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - chrony
    state: present

- name: chrony 시간 동기화 서비스 시작
  systemd:
    name: chrony
    enabled: true
    state: started

# ------------------------------------------------------------
# 2. Swap 비활성화
# ------------------------------------------------------------

- name: Swap 비활성화
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: /etc/fstab에서 swap 주석 처리
  replace:
    path: /etc/fstab
    regexp: '^([^#].*\sswap\s)'
    replace: '#\1'

# ------------------------------------------------------------
# 3. 커널 모듈 및 파라미터 설정
# ------------------------------------------------------------

- name: 커널 모듈 설정 파일 생성
  copy:
    dest: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter

- name: 커널 모듈 로드
  modprobe:
    name: "{{ item }}"
    state: present
  loop:
    - overlay
    - br_netfilter

- name: 커널 파라미터 설정 파일 생성
  copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1

- name: 커널 파라미터 적용
  command: sysctl --system

# ------------------------------------------------------------
# 4. containerd 설치 및 설정
# ------------------------------------------------------------

- name: containerd 설치
  apt:
    name: containerd
    state: present

- name: containerd 설정 디렉토리 생성
  file:
    path: /etc/containerd
    state: directory
    mode: '0755'

- name: containerd 설정 파일 존재 여부 확인
  stat:
    path: /etc/containerd/config.toml
  register: containerd_config_file

- name: containerd 기본 설정 파일 생성
  shell: containerd config default > /etc/containerd/config.toml
  args:
    executable: /bin/bash
  when: not containerd_config_file.stat.exists

- name: containerd SystemdCgroup 설정 변경
  replace:
    path: /etc/containerd/config.toml
    regexp: 'SystemdCgroup = false'
    replace: 'SystemdCgroup = true'

- name: containerd 재시작 및 자동시작 설정
  systemd:
    name: containerd
    enabled: true
    state: restarted

# ------------------------------------------------------------
# 5. Kubernetes 저장소 등록 및 설치 (GPG 문제 수정됨)
# ------------------------------------------------------------

- name: Kubernetes GPG 키 디렉토리 생성
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Kubernetes GPG 키 존재 여부 확인
  stat:
    path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
  register: k8s_gpg_key_file

- name: Kubernetes GPG 키 다운로드 (gpg 바이너리 저장)
  shell: |
    curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | \
    gpg --dearmor | tee /etc/apt/keyrings/kubernetes-apt-keyring.gpg > /dev/null
  args:
    executable: /bin/bash
  when: not k8s_gpg_key_file.stat.exists

- name: Kubernetes 저장소 등록
  copy:
    dest: /etc/apt/sources.list.d/kubernetes.list
    content: |
      deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /
    mode: '0644'

- name: APT 캐시 업데이트
  apt:
    update_cache: yes

- name: kubeadm, kubelet, kubectl 설치
  apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present

- name: kubeadm, kubelet, kubectl hold 설정
  command: apt-mark hold kubelet kubeadm kubectl