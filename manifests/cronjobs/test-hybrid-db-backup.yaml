apiVersion: v1
kind: PersistentVolume
metadata:
  name: test-db-backup-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  storageClassName: "test-db-backup"
  nfs:
    path: /mnt/nfs-storage/test-db-backup
    server: 192.168.56.100
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: test-db-backup-pvc
  namespace: test
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: "test-db-backup"
  volumeName: test-db-backup-pv
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: test-hybrid-db-backup
  namespace: test
spec:
  schedule: "*/5 * * * *"
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
            sidecar.istio.io/inject: "false"  # Istio 사이드카 주입 방지
        spec:
          containers:
            - name: db-backup
              image: bitnami/postgresql:16
              securityContext:
                runAsUser: 0
              command:
                - /bin/bash
                - -c
                - |
                  export PGPASSWORD=$(cat /secrets/password)
                  FILENAME="/backup/backup-$(date +%Y%m%d-%H%M%S).sql"
                  echo "[INFO] 시작: 백업을 $FILENAME 에 저장합니다."
                  pg_dump -U "$PGUSER" -h test-hybrid-db-postgresql-ha-postgresql -d "$PGDATABASE" >"$FILENAME"
                  if [ $? -eq 0 ]; then
                    echo "[SUCCESS] 백업 완료: $FILENAME"
                  else
                    echo "[ERROR] 백업 실패: pg_dump 실패"
                    exit 1
                  fi
                  # 오래된 백업 정리
                  ls -1t /backup/*.sql | tail -n +26 | xargs -r rm --
                  echo "[INFO] 정리 완료"

              volumeMounts:
                - name: backup-vol
                  mountPath: /backup
                - name: secret-vol
                  mountPath: /secrets
                  readOnly: true
              env:
                - name: PGUSER
                  valueFrom:
                    secretKeyRef:
                      name: test-hybrid-db-secrets
                      key: username
                - name: PGDATABASE
                  valueFrom:
                    secretKeyRef:
                      name: test-hybrid-db-secrets
                      key: database
          volumes:
            - name: backup-vol
              persistentVolumeClaim:
                claimName: test-db-backup-pvc
            - name: secret-vol
              secret:
                secretName: test-hybrid-db-secrets
          restartPolicy: OnFailure